 Samples |	Source code & Disassembly of y-1nop for mem_inst_retired.all_loads:upp (4999 samples)
-----------------------------------------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	0000000000400547 <f1>:
         :	f1():
       0 :	  400547:       push   %rbp
       0 :	  400548:       mov    %rsp,%rbp
       0 :	  40054b:       mov    %rdi,-0x18(%rbp)
       0 :	  40054f:       mov    %rsi,-0x20(%rbp)
       0 :	  400553:       movl   $0x1,-0x4(%rbp)
       0 :	  40055a:       movq   $0x0,-0x10(%rbp)
       0 :	  400562:       jmp    40058c <f1+0x45>
     583 :	  400564:       negl   -0x4(%rbp)
     557 :	  400568:       mov    -0x10(%rbp),%rax
       0 :	  40056d:       lea    0x0(,%rax,4),%rdx
     618 :	  400576:       mov    -0x18(%rbp),%rax
       0 :	  40057b:       add    %rax,%rdx
     715 :	  40057f:       mov    -0x4(%rbp),%eax
       0 :	  400583:       mov    %eax,(%rdx)
    1675 :	  400586:       addq   $0x1,-0x10(%rbp)
     645 :	  40058c:       mov    -0x10(%rbp),%rax
     206 :	  400591:       cmp    -0x20(%rbp),%rax
       0 :	  400596:       jb     400564 <f1+0x1d>
       0 :	  400599:       pop    %rbp
       0 :	  40059b:       retq
 Samples |	Source code & Disassembly of y-1nop for mem_inst_retired.all_loads:upp (5720 samples)
-----------------------------------------------------------------------------------------------------
         :
         :
         :
         :	Disassembly of section .text:
         :
         :	000000000040059c <f2>:
         :	f2():
       0 :	  40059c:       push   %rbp
       0 :	  40059d:       mov    %rsp,%rbp
       0 :	  4005a0:       mov    %rdi,-0x18(%rbp)
       0 :	  4005a4:       mov    %rsi,-0x20(%rbp)
       0 :	  4005a8:       mov    %rdx,-0x28(%rbp)
       0 :	  4005ac:       movq   $0x1,-0x8(%rbp)
       0 :	  4005b4:       jmp    4005f0 <f2+0x54>
     381 :	  4005b6:       mov    -0x8(%rbp),%rax
       0 :	  4005bb:       lea    0x0(,%rax,4),%rdx
     847 :	  4005c4:       mov    -0x20(%rbp),%rax
       0 :	  4005c9:       add    %rdx,%rax
     774 :	  4005cd:       mov    -0x8(%rbp),%rdx
       0 :	  4005d2:       lea    0x0(,%rdx,4),%rcx
     847 :	  4005db:       mov    -0x18(%rbp),%rdx
       0 :	  4005e0:       add    %rcx,%rdx
     828 :	  4005e4:       mov    (%rax),%eax
       0 :	  4005e7:       mov    %eax,(%rdx)
     849 :	  4005ea:       addq   $0x1,-0x8(%rbp)
     350 :	  4005f0:       mov    -0x28(%rbp),%rax
       0 :	  4005f5:       sub    $0x1,%rax
     844 :	  4005fa:       cmp    %rax,-0x8(%rbp)
       0 :	  4005ff:       jb     4005b6 <f2+0x1a>
       0 :	  400602:       pop    %rbp
       0 :	  400604:       retq
